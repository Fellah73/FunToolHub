generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String    @unique
  password        String
  pseudoname      String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  profileImage    String    @default("")
  backgroundImage String    @default("")
  bio             String    @default("")
  flappyScores    FlappyScore[]
  snakeScores     SnakeScore[]
  testimonials    Testimonial[]  
}

model FlappyScore {
  id        String   @id @default(uuid())
  score     Int
  playedAt  DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model SnakeScore {
  id        String   @id @default(uuid())
  score     Int
  playedAt  DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Testimonial {
  id        String   @id @default(uuid())
  title     String
  content   String
  rating    Int      @default(5) 
  createdAt DateTime @default(now())
  isVisible Boolean  @default(true)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CleanupLog {
  id          String   @id @default(uuid())
  cleanupDate DateTime @unique @db.Date
  createdAt   DateTime @default(now())
  
  @@index([cleanupDate])
}